package config
import utils.int

object AcousticProperty {
  val SR=100000
  val SR_RESPONSE=48000
  val FREQ_MIN=15000f
  val FREQ_MAX=20000f
  val FREQ_TONE=22000
  val FREQ_RESPONSE_TONE=21000
  val FREQ_SILENT=13000

  val FIR_HALF_WINDOW=120 //half of the FIR window size
  val FIR_HALF_WINDOW_RESPONSE=60

  val BUFFER_SIZE_IN_SYMBOL=500
  val BUFFER_SIZE_IN_SYMBOL_RESPONSE=240

  val CHANNEL_NUM=4
  val RESPONSE_CHANNEL_NUM=2

  val LEFT_CHANNEL=2
  val BOTTOM_CHANNEL=0
  val MIDDLE_CHANNEL=1
  val RIGHT_CHANNEL=3

  val RESPONSE_CHANNEL=0

  val SOUND_SPEED=330.0f //m/s

  val DISTANCE_X_MIDDLE=0.0185f //m
  val DISTANCE_X_FAR=0.117f  //m
  val DISTANCE_Y=0.04f  //m

  val MAX_ANGULAR_SPEED=2*Math.PI.toFloat //radian per second
  val MAX_DISTANCE_SPEED=2f //m/s

  val DELTA_VARIANCE=0.001f  //phase change variance in sample
  val DELTA_VARIANCE_LOWSNR=0.1f
  val DISTANCE_HALF_PENALTY=2f //at this distance (in sample) penalty is doubled
  val SNR_MAX=4f // less than 1 is 0
  val MAX_DIST=1.5f //m


  // version 2.0:

  val VER2_CENTERFREQ=17200+16*200
  val VER2_FREQSEP=200
  val VER2_FREQ_SEQ=
    Array.range(0, 16).map { i =>
      Array(i * 200 + 17200, i * 200 + VER2_CENTERFREQ + 200)
    }

  val VER2_FREQ_SEQ_CNT=VER2_FREQ_SEQ.length
  val VER2_FREQ_DURATION=0.005f
  val VER2_CYCLE_DURATION=VER2_FREQ_DURATION*VER2_FREQ_SEQ_CNT
  val VER2_SR=100000
  val VER2_RESPONSE_SR=48000

  val VER2_FREQ_DURATION_SAMPLE=int(VER2_FREQ_DURATION*VER2_SR)
  val VER2_CYCLE_DURATION_SAMPLE=int(VER2_CYCLE_DURATION*VER2_SR)

  val VER2_FMCW_FSTART=17000
  val VER2_FMCW_FEND=23000
  val VER2_FMCW_CHIRP_DURATION=0.04f
  val VER2_FMCW_GUARD_DURATION=0.01f
  val VER2_FMCW_CYCLE_DURATION=VER2_FMCW_CHIRP_DURATION+VER2_FMCW_GUARD_DURATION

  val VER2_FMCW_CHIRP_DURATION_SAMPLE=int(VER2_FMCW_CHIRP_DURATION*VER2_SR)
  val VER2_FMCW_GUARD_DURATION_SAMPLE=int(VER2_FMCW_GUARD_DURATION*VER2_SR)
  val VER2_FMCW_CYCLE_DURATION_SAMPLE=VER2_FMCW_CHIRP_DURATION_SAMPLE+VER2_FMCW_GUARD_DURATION_SAMPLE
  val VER2_FMCW_WINDOWSIZE=VER2_FMCW_CHIRP_DURATION_SAMPLE*3/4

  val VER2_CHANNELS_CONFIG=Array((0f,0f), (6e-2f, 0f), (0f, 5.35e-2f), (6e-2f, 5.35e-2f))
  //val VER2_CHANNELS_CONFIG=Array((0f, 0f), (15e-2f, 0f), (0f, 15e-2f), (15e-2f, 15e-2f))
  val VER2_CHANNELS_CLIENT_CONFIG=Array((0f, 0f), (10e-2f, 0f))

  val VER2_BUFFER_SIZE_BYTE_STATION=VER2_FMCW_CYCLE_DURATION_SAMPLE*VER2_CHANNELS_CONFIG.length*2
  val VER2_BUFFER_SIZE_CLIENT=2400
  val VER2_BUFFER_SIZE_BYTE_CLIENT=VER2_BUFFER_SIZE_CLIENT*VER2_CHANNELS_CLIENT_CONFIG.length*2

}
